openapi: 3.0.0
info:
  title: To Love Webcasts
  description: |
    This is an API server for event "To Love Webcasts".
  contact:
    email: joshuasrkf@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
- url: https://virtserver.swaggerhub.com/BBT-Tech-S/To-Love-Camgirl/1.0.0
  description: SwaggerHub API Auto Mocking
- url: http://server.sforest.in/bbtt/api
  description: Test Server (Under construct)
tags:
- name: common
  description: APIs that you can call
- name: debug
  description: APIs that available on test servers only
paths:
  /info:
    post:
      tags:
      - common
      summary: Upload user's basic information
      description: This API **must** be called before others.
      operationId: info_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body'
            example:
              name: Joshua
              gender: male
              language: Chinese
        required: true
      responses:
        200:
          description: ok
        405:
          description: Invalid input
      x-openapi-router-controller: swagger_server.controllers.common_controller
  /audio:
    get:
      tags:
      - common
      summary: Get a random comment for user's audio
      operationId: audio_get
      responses:
        200:
          description: The url of comment audio
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
              example:
                url: http://server.sforest.in/bbtt/static/comment.wav
        401:
          description: You have to call /info first
      x-openapi-router-controller: swagger_server.controllers.common_controller
    post:
      tags:
      - common
      summary: Upload user's recorded audio
      operationId: audio_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body_1'
            example:
              id: THE-ID-THAT-WECHAT-API-RETURNS
        required: true
      responses:
        200:
          description: ok
        401:
          description: You have to call /info first
        405:
          description: Invalid input
      x-openapi-router-controller: swagger_server.controllers.common_controller
  /text:
    get:
      tags:
      - common
      description: Get a random piece of text based on user's information
      operationId: text_get
      responses:
        200:
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_1'
              example:
                text: |-
                  铁骑将军：热血骁勇，戎马一生
                  宁为百夫长，胜作一书生。
                  ——杨炯《从军行》
        401:
          description: You have to call /info first
      x-openapi-router-controller: swagger_server.controllers.common_controller
  /report:
    get:
      tags:
      - common
      description: Get a random report based on user's information
      operationId: report_get
      responses:
        200:
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_2'
              example:
                property: 悠然仙姬音
                confidence: 88
                character: 龚琳娜
                score: 4
                type: 攻
                description: |-
                  你的声音自带故事感
                  如午后红茶，拥有让人沉静的力量
        401:
          description: You have to call /info first
      x-openapi-router-controller: swagger_server.controllers.common_controller
components:
  schemas:
    body:
      type: object
      properties:
        name:
          type: string
        gender:
          type: string
          enum:
          - male
          - female
          - unknown
        language:
          type: string
          enum:
          - Chinese
          - English
    inline_response_200:
      type: object
      properties:
        url:
          type: string
      example:
        url: url
    body_1:
      type: object
      properties:
        id:
          type: string
    inline_response_200_1:
      type: object
      properties:
        text:
          type: string
      example:
        text: text
    inline_response_200_2:
      type: object
      properties:
        property:
          type: string
        confidence:
          maximum: 100
          minimum: 0
          type: integer
        character:
          type: string
        score:
          maximum: 5
          minimum: 1
          type: integer
        type:
          type: string
        description:
          type: string
      example:
        score: 3
        character: character
        confidence: 8
        property: property
        description: description
        type: type

